# init database in ./postgres
docker image rm cs548/database
docker build -t cs548/database ./postgres

# init domain in ./clinic-domain
docker image rm cs548/clinic-domain
docker build -t cs548/clinic-domain ./clinic-domain


# init webapp in ./clinic-webapp
docker image rm cs548/clinic-webapp
docker build -t cs548/clinic-webapp ./clinic-webapp


# init rest in ./clinic-rest 
docker image rm cs548/clinic-rest
docker build -t cs548/clinic-rest ./clinic-rest

kubectl config use-context docker-desktop
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
kubectl apply -f dashboard-adminuser.yaml
kubectl apply -f dashboard-authorization.yaml
# kubectl create -f dashboard-adminuser.yaml
# kubectl create -f dashboard-authorization.yaml
# kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath="{.secrets[0].name}") -o go-template="{{.data.token | base64decode}}"


kubectl -n kubernetes-dashboard create token admin-user
kubectl proxy

http://localhost:8001/api/v1/namespaces/kubernetesdashboard/services/https:kubernetes-dashboard:/proxy/

# database deploy
kubectl apply -f cs548-database-deploy.yaml
kubectl get pods
kubectl describe pod pod-name

# database service
kubectl apply -f cs548-database-service.yaml
kubectl get service cs548db
kubectl describe service cs548db

# microservice deploy
kubectl apply -f clinic-domain-deployment.yaml
kubectl get pods
kubectl describe pod pod-name

# microservice service
kubectl apply -f clinic-domain-service.yaml
kubectl get service clinic-domain
kubectl describe service clinic-domain

# webapp deploy
kubectl apply -f clinic-webapp-deployment.yaml
kubectl get pods
kubectl describe pod pod-name

# webapp service
kubectl apply -f clinic-webapp-service.yaml
kubectl get service clinic-webapp
kubectl describe service clinic-webapp